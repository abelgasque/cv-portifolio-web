name: Build and Deploy (AWS)

on:
  push:
    tags: 'v*'

jobs:
  build-app:
    environment: production
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Notify Discord (Build Started)
      run: |
        curl -H "Content-Type: application/json" \
        -X POST \
        -d '{"username": "Bot AWS", "content": "üöÄ **Build iniciado!**\nReposit√≥rio: `${{ github.repository }}`\nAmbiente: Produ√ß√£o\nTag: `${{ github.ref_name }}`"}' \
        ${{ secrets.DISCORD_WEBHOOK_URL }} || true

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
         node-version: '18.x'

    - name: Install dependencies
      run: npm install --force

    - name: Prebuild Angular App
      run: npm run build-prod
      env:
        APP_DEBUG: production
        APP_NAME: ${{ github.repository }}
        APP_VERSION: ${{ github.ref_name }} 
        APP_AVATAR_IMG: ${{ secrets.APP_AVATAR_IMG }}
        APP_CV_FILE: ${{ secrets.APP_CV_FILE }}
  
    - name: Build Angular App
      run: npm run build -- --configuration=production 

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to S3
      run: |
        aws s3 sync ./dist/ s3://${{ secrets.AWS_S3_BUCKET_NAME }} --delete
        aws s3 website s3://${{ secrets.AWS_S3_BUCKET_NAME }} --index-document index.html --error-document index.html
  
  notify-build-success:
    needs: build-app
    environment: production
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Notify Discord (Success)
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{"username": "Bot AWS", "content": "‚úÖ **Sucesso ao gerar vers√£o!**\nReposit√≥rio: `${{ github.repository }}`\nAmbiente: Produ√ß√£o\nTag: `${{ github.ref_name }}`"}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

  notify-build-failure:
    needs: build-app
    environment: production
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Notify Discord (Failure)
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{"username": "Bot AWS", "content": "‚ùå **Falha ao gerar vers√£o!**\nReposit√≥rio: `${{ github.repository }}`\nAmbiente: Produ√ß√£o\nTag: `${{ github.ref_name }}`"}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}