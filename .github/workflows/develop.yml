name: Build and Deploy (Develop)

on:
  push:
    branches:
      - develop

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    environment: development
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Notify Discord (Build Started)
      run: |
        curl -H "Content-Type: application/json" \
        -X POST \
        -d '{"username": "Bot GitHub", "content": "üöÄ **Build iniciado!**\nReposit√≥rio: `${{ github.repository }}`\nAmbiente: Desenvolvimento\nBranch: `${{ github.ref_name }}`"}' \
        ${{ secrets.DISCORD_WEBHOOK_URL }} || true
    
    - name: Notify Telegram (Build Started)
      run: |
        curl -s -X POST \
        https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
        -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
        -d text="üöÄ **Build iniciado!**\nReposit√≥rio: `${{ github.repository }}`\nAmbiente: Desenvolvimento\nBranch: `${{ github.ref_name }}`" || true

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.x'

    - name: Install dependencies
      run: npm install --force

    - name: Prebuild Angular App
      run: npm run build-prod
      env:
        APP_DEBUG: production
        APP_NAME: ${{ github.repository }}
        APP_VERSION: ${{ github.ref_name }} 
        APP_AVATAR_IMG: https://github.com/${{ github.actor }}.png
  
    - name: Build Angular App
      run: npm run build --configuration=production --base-href="./${{ github.repository }}"

    - name: Install Github Pages
      run: npm i -g angular-cli-ghpages

    - name: Configure Git User
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Cleanup Cache
      run: rm -rf node_modules/.cache/gh-pages/

    - name: Deploy Github Pages
      run: angular-cli-ghpages --dir=dist --no-silent --clean --repo=https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

  report-status:
    name: Report Build Status
    needs: build
    environment: development
    runs-on: ubuntu-latest

    steps:
    - name: Notify Discord (Success)
      if: success()
      run: |
        curl -H "Content-Type: application/json" \
        -X POST \
        -d '{"username": "Bot GitHub", "content": "‚úÖ **Sucesso ao gerar vers√£o!**\nReposit√≥rio: `${{ github.repository }}`\nAmbiente: Desenvolvimento\nBranch: `${{ github.ref_name }}`"}' \
        ${{ secrets.DISCORD_WEBHOOK_URL }}

    - name: Notify Telegram (Success)
      if: success()
      run: |
        curl -s -X POST \
        https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
        -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
        -d text="‚úÖ **Sucesso ao gerar vers√£o!**\nReposit√≥rio: `${{ github.repository }}`\nAmbiente: Desenvolvimento\nBranch: `${{ github.ref_name }}`"

    - name: Notify Discord (Failure)
      if: failure()
      run: |
        curl -H "Content-Type: application/json" \
        -X POST \
        -d '{"username": "Bot GitHub", "content": "‚ùå **Falha ao gerar vers√£o!**\nReposit√≥rio: `${{ github.repository }}`\nAmbiente: Desenvolvimento\nBranch: `${{ github.ref_name }}`"}' \
        ${{ secrets.DISCORD_WEBHOOK_URL }}

    - name: Notify Telegram (Failure)
      if: failure()
      run: |
        curl -s -X POST \
        https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
        -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
        -d text="‚ùå **Falha ao gerar vers√£o!**\nReposit√≥rio: `${{ github.repository }}`\nAmbiente: Desenvolvimento\nBranch: `${{ github.ref_name }}`"