name: Deploy to Firebase

on:
  push:
    branches:
      - develop
    tags:
      - 'v*'
jobs:
  firebase-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/develop' && 'development' || 'production' }}

    steps:
    # Checkout do c√≥digo
    - name: Checkout code
      uses: actions/checkout@master

    # Configura√ß√£o do Node.js
    - name: Set up Node.js
      uses: actions/setup-node@master
      with:
        node-version: '18.x'

    # Instala√ß√£o de depend√™ncias
    - name: Install dependencies
      run: npm install --force

    # Notifica√ß√£o de in√≠cio da build
    - name: Notify Discord (Build Started)
      run: |
        curl -H "Content-Type: application/json" \
          -X POST \
          -d '{"username": "Build Bot", "content": "üöÄ **Deploy iniciado!**\nAmbiente: ${{ github.ref == 'refs/heads/develop' && 'Development' || 'Production' }}\nTag: `${{ github.ref_name }}`"}' \
          ${{ vars.DISCORD_WEBHOOK_URL }}

    # Substituir vari√°veis de ambiente no environment.prod.ts
    - name: Replace environment variables
      run: |
        sed -i 's/{{FIREBASE_API_KEY}}/${{ secrets.FIREBASE_API_KEY }}/g' src/environments/environment.prod.ts
        sed -i 's/{{FIREBASE_AUTH_DOMAIN}}/${{ vars.FIREBASE_AUTH_DOMAIN }}/g' src/environments/environment.prod.ts
        sed -i 's/{{FIREBASE_AVATAR_IMG}}/${{ vars.FIREBASE_AVATAR_IMG }}/g' src/environments/environment.prod.ts
        sed -i 's/{{FIREBASE_CV_IMG}}/${{ vars.FIREBASE_CV_IMG }}/g' src/environments/environment.prod.ts
        sed -i 's/{{FIREBASE_PROJECT_ID}}/${{ vars.FIREBASE_PROJECT_ID }}/g' src/environments/environment.prod.ts
        sed -i 's/{{FIREBASE_STORAGE_BUCKET}}/${{ vars.FIREBASE_STORAGE_BUCKET }}/g' src/environments/environment.prod.ts
        sed -i 's/{{FIREBASE_MESSAGING_SENDER_ID}}/${{ vars.FIREBASE_MESSAGING_SENDER_ID }}/g' src/environments/environment.prod.ts
        sed -i 's/{{FIREBASE_APP_ID}}/${{ vars.FIREBASE_APP_ID }}/g' src/environments/environment.prod.ts
        sed -i 's/{{FIREBASE_MEASUREMENT_ID}}/${{ vars.FIREBASE_MEASUREMENT_ID }}/g' src/environments/environment.prod.ts

    # Build do projeto
    - name: Build Angular App
      run: npm run build -- --configuration=production

    - name: Set up Firebase tools
      run: |
        echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}" > $HOME/service-account.json
        npm install -g firebase-tools
      env:
        GOOGLE_APPLICATION_CREDENTIALS: $HOME/service-account.json

    # Deploy para Firebase Hosting
    - name: Deploy to Firebase Hosting
      run: |
        firebase deploy --only hosting --project="${{ vars.FIREBASE_PROJECT_ID }}" --token="${{ secrets.FIREBASE_TOKEN }}"
      env:
        GOOGLE_APPLICATION_CREDENTIALS: $HOME/service-account.json

    # Notifica√ß√£o de sucesso ou falha
    - name: Notify Discord (Success)
      if: success()
      run: |
        curl -H "Content-Type: application/json" \
          -X POST \
          -d '{"username": "Build Bot", "content": "‚úÖ **Deploy conclu√≠do com sucesso!**\nAmbiente: ${{ github.ref == 'refs/heads/develop' && 'Development' || 'Production' }}\nTag: `${{ github.ref_name }}`"}' \
          ${{ vars.DISCORD_WEBHOOK_URL }}

    - name: Notify Discord (Failure)
      if: failure()
      run: |
        curl -H "Content-Type: application/json" \
          -X POST \
          -d '{"username": "Build Bot", "content": "‚ùå **Deploy falhou!**\nAmbiente: ${{ github.ref == 'refs/heads/develop' && 'Development' || 'Production' }}\nTag: `${{ github.ref_name }}`"}' \
          ${{ vars.DISCORD_WEBHOOK_URL }}