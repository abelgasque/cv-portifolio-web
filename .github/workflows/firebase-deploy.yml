name: Deploy to Firebase

on:
  push:
    branches:
      - 'firebase'

jobs:
  firebase-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.x'
      
    - name: Install nodejs and firebase tools
      run: npm install --force && npm install -g firebase-tools
    
    - name: Prebuild Angular App
      run: npm run build-prod
      env:
        APP_DEBUG: 'production'
        APP_NAME: ${{ github.repository }}
        APP_VERSION: ${{ github.ref_name }} 
        APP_AVATAR_IMG: ${{ secrets.APP_AVATAR_IMG }}
        APP_CV_FILE: ${{ secrets.APP_CV_FILE }}
        FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
    
    - name: Build Angular App
      run: npm run build -- --configuration=production

    - name: Deploy to Firebase Hosting
      run: firebase deploy --only hosting --token="${{ secrets.FIREBASE_TOKEN }}" --project="${{ secrets.FIREBASE_PROJECT_ID }}"

  notify:
    needs: firebase-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Notify Discord (Success)
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{"username": "Firebase Bot", "content": "✅ **Deploy concluído com sucesso no Firebase!**\nRepositório: `${{ github.repository }}`\nAmbiente: Produção\nTag: `${{ github.ref_name }}`"}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Notify Discord (Failure)
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{"username": "Firebase Bot", "content": "❌ **Deploy falhou no Firebase!**\nRepositório: `${{ github.repository }}`\nAmbiente: Produção\nTag: `${{ github.ref_name }}`"}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}